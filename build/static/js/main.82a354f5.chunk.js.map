{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/personService.js","components/Notification.js","App.js","index.js"],"names":["Filter","newSearch","onChange","value","PersonForm","onSubmit","states","handlers","name","number","type","Persons","personsToShow","onClick","map","person","key","id","baseUrl","axios","get","newObject","post","delete","newPerson","put","Notification","msg","includes","style","color","background","fontSize","border","borderRadius","padding","marginBottom","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setNewSearch","message","setMessage","useEffect","personService","then","response","data","filter","x","toLowerCase","y","event","target","preventDefault","duplicate","find","undefined","window","confirm","updatePerson","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82a354f5.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({newSearch, onChange}) => {\n\n    return ( \n        <div>\n            filter shown with \n            <input\n                value={newSearch}\n                onChange={onChange}\n            />\n        </div>\n    )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = ({ onSubmit, states, handlers }) => {\n    return (\n        <form onSubmit={onSubmit}>\n            <div>\n                <div>\n                    name: <input \n                        value={states.name}\n                        onChange={handlers.name}\n                    /> \n                </div>\n                <div>\n                    number: <input\n                        value={states.number}\n                        onChange={handlers.number}\n                    />\n                </div>\n            </div>\n            <div>\n                <button type='submit'>add</button>\n            </div>\n        </form>\n    )\n\n\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst Persons = ({ personsToShow, onClick }) => {\n\n    return (\n        <h4>\n            {personsToShow.map(person => \n            <p key={person.name}>\n            {person.name} {person.number}\n            <button name={person.name} id={person.id} type='button' onClick={onClick}>delete</button>\n            </p>)}\n        </h4>\n    )\n}\n\nexport default Persons\n","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst erase = id => {\n    return axios.delete(baseUrl+`/${id}`)\n}\n\nconst update = (id, newPerson) => {\n    return axios.put(`${baseUrl}/${id}`, newPerson)\n}\n\nexport default { getAll, create, erase, update }\n","import React from 'react'\n\nconst Notification = ({ msg }) => {\n\n    const success = {\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: 20,\n        border: '4px solid green', \n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n    }\n    const fail = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: 20,\n        border: '4px solid red', \n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n    }\n\n    if(msg===null) {\n        return null\n    }else if(msg.includes('Information')) {\n        return (\n            <div style={fail}>\n                {msg}\n            </div>\n        )\n    }else {\n        return (\n            <div style={success}>\n                {msg}\n            </div>\n        )\n    } \n\n}\n\nexport default Notification\n","import React, {useState, useEffect} from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/personService'\nimport Notification from './components/Notification'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [newSearch, setNewSearch] = useState('')\n    const [message, setMessage] = useState(null)\n\n    useEffect(() => {\n        personService.getAll()\n            .then(response => {\n                setPersons(response.data)\n            })\n    }, [])\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const newPerson = {\n            name: newName,\n            number: newNumber\n        }\n        // check if there's any duplicate with the same name\n        const duplicate = persons.find(person => person.name === newName)\n\n        // if there's a duplicate with the same name, ask if the user wants to update the number\n        if (duplicate !== undefined) {\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n                const updatePerson = {...duplicate, number: newNumber}\n                personService.update(duplicate.id, updatePerson)\n                    .then(response => {\n                        setPersons(persons.map(person => person.id === duplicate.id ? response.data : person))\n                        setMessage(`Updated ${newName}'s phone number`)\n                        setTimeout(() => {\n                            setMessage(null)\n                        }, 2000)\n                    })\n                    .catch(error => {\n                        setMessage(`Information of ${newName} has already been removed from server`)\n                        setTimeout(() => {\n                            setMessage(null)\n                        }, 2000)\n                    })\n\n            }\n        } else {\n            personService.create(newPerson)\n                .then(response => {\n                    setPersons(persons.concat(response.data))\n                    setMessage(`Added ${newName}`)\n                    setTimeout(() => {\n                        setMessage(null)\n                    }, 2000)\n                })\n        }\n    }\n\n    const deletePerson = (event) => {\n        const name = event.target.name\n        const id = event.target.id\n        if (window.confirm(`Delete ${name}?`)) {\n            personService.erase(id)\n                .then(response => {\n                    setPersons(persons.filter(person => id != person.id))\n                })\n        }\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n    const handleSearchChange = (event) => {\n        setNewSearch(event.target.value)\n    }\n\n    const personsToShow = persons.filter(person => {\n        const x = person.name.toLowerCase()\n        const y = newSearch.toLowerCase()\n        return x.includes(y)\n    })\n    const states = {\n        name: newName,\n        number: newNumber\n    }\n    const handlers = {\n        name: handleNameChange,\n        number: handleNumberChange\n    }\n\n    return (\n        <div>\n            <h2>PhoneBook</h2>\n            <Notification msg={message} />\n            <Filter newSearch={newSearch} onChange={handleSearchChange} />\n            <h2>add a new</h2>\n            <PersonForm onSubmit={addPerson} states={states} handlers={handlers} />\n            <h2>Numbers</h2>\n            <Persons personsToShow={personsToShow} onClick={deletePerson} />\n\n        </div>\n    )\n}\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}